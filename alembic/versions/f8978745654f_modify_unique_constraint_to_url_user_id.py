"""Modify unique constraint to (url, user_id)

Revision ID: f8978745654f
Revises: a941301de845
Create Date: 2025-08-26 22:20:39.472129

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = 'f8978745654f'
down_revision: Union[str, Sequence[str], None] = 'a941301de845'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_collection_articles_id'), table_name='collection_articles')
    op.drop_table('collection_articles')
    op.drop_index(op.f('ix_rss_articles_id'), table_name='rss_articles')
    op.drop_table('rss_articles')
    op.drop_index(op.f('ix_rss_feeds_id'), table_name='rss_feeds')
    op.drop_table('rss_feeds')
    op.drop_index(op.f('ix_feed_access_id'), table_name='feed_access')
    op.drop_table('feed_access')
    op.drop_index(op.f('ix_collection_permissions_id'), table_name='collection_permissions')
    op.drop_table('collection_permissions')
    op.drop_index(op.f('ix_notifications_id'), table_name='notifications')
    op.drop_table('notifications')
    op.drop_index(op.f('ix_comments_id'), table_name='comments')
    op.drop_table('comments')
    op.drop_index(op.f('ix_friendships_id'), table_name='friendships')
    op.drop_table('friendships')
    op.drop_index(op.f('ix_collection_members_id'), table_name='collection_members')
    op.drop_table('collection_members')
    op.drop_index(op.f('ix_collections_id'), table_name='collections')
    op.drop_table('collections')
    op.drop_table('collection_feeds')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_follows_id'), table_name='follows')
    op.drop_table('follows')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('follows',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('follower_id', sa.INTEGER(), nullable=False),
    sa.Column('followed_id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['followed_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['follower_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_follows_id'), 'follows', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('username', sa.VARCHAR(), nullable=False),
    sa.Column('full_name', sa.VARCHAR(), nullable=True),
    sa.Column('email', sa.VARCHAR(), nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=1)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=1)
    op.create_table('collection_feeds',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('collection_id', sa.INTEGER(), nullable=True),
    sa.Column('feed_id', sa.INTEGER(), nullable=True),
    sa.Column('added_at', sa.DATETIME(), nullable=True),
    sa.Column('added_by', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['added_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['collection_id'], ['collections.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['feed_id'], ['rss_feeds.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('collections',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('creator_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_collections_id'), 'collections', ['id'], unique=False)
    op.create_table('collection_members',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('collection_id', sa.INTEGER(), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('role', sa.VARCHAR(length=7), nullable=False),
    sa.ForeignKeyConstraint(['collection_id'], ['collections.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_collection_members_id'), 'collection_members', ['id'], unique=False)
    op.create_table('friendships',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('requester_id', sa.INTEGER(), nullable=False),
    sa.Column('receiver_id', sa.INTEGER(), nullable=False),
    sa.Column('status', sa.VARCHAR(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['receiver_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['requester_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_friendships_id'), 'friendships', ['id'], unique=False)
    op.create_table('comments',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('text', sa.VARCHAR(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('article_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['article_id'], ['rss_articles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_comments_id'), 'comments', ['id'], unique=False)
    op.create_table('notifications',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('requester_id', sa.INTEGER(), nullable=False),
    sa.Column('receiver_id', sa.INTEGER(), nullable=False),
    sa.Column('type', sa.VARCHAR(), nullable=False),
    sa.Column('message', sa.VARCHAR(), nullable=False),
    sa.Column('timestamp', sa.DATETIME(), nullable=True),
    sa.Column('is_read', sa.BOOLEAN(), nullable=True),
    sa.Column('friendship_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['friendship_id'], ['friendships.id'], ),
    sa.ForeignKeyConstraint(['receiver_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['requester_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notifications_id'), 'notifications', ['id'], unique=False)
    op.create_table('collection_permissions',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('collection_id', sa.INTEGER(), nullable=True),
    sa.Column('can_add_feed', sa.BOOLEAN(), nullable=True),
    sa.Column('can_read', sa.BOOLEAN(), nullable=True),
    sa.Column('can_comment', sa.BOOLEAN(), nullable=True),
    sa.ForeignKeyConstraint(['collection_id'], ['collections.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_collection_permissions_id'), 'collection_permissions', ['id'], unique=False)
    op.create_table('feed_access',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('feed_id', sa.INTEGER(), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('can_edit', sa.BOOLEAN(), nullable=True),
    sa.Column('can_delete', sa.BOOLEAN(), nullable=True),
    sa.ForeignKeyConstraint(['feed_id'], ['rss_feeds.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_feed_access_id'), 'feed_access', ['id'], unique=False)
    op.create_table('rss_feeds',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('title', sa.VARCHAR(), nullable=False),
    sa.Column('url', sa.VARCHAR(), nullable=False),
    sa.Column('description', sa.VARCHAR(), nullable=True),
    sa.Column('tags', sqlite.JSON(), nullable=True),
    sa.Column('update_frequency', sa.VARCHAR(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('is_shared', sa.BOOLEAN(), nullable=True),
    sa.Column('article_limit', sa.INTEGER(), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('url')
    )
    op.create_index(op.f('ix_rss_feeds_id'), 'rss_feeds', ['id'], unique=False)
    op.create_table('rss_articles',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('title', sa.VARCHAR(), nullable=False),
    sa.Column('link', sa.VARCHAR(), nullable=False),
    sa.Column('published_at', sa.DATETIME(), nullable=True),
    sa.Column('tags', sqlite.JSON(), nullable=True),
    sa.Column('author', sa.VARCHAR(), nullable=True),
    sa.Column('summary', sa.VARCHAR(), nullable=True),
    sa.Column('is_read', sa.BOOLEAN(), nullable=True),
    sa.Column('is_favorite', sa.BOOLEAN(), nullable=True),
    sa.Column('source_name', sa.VARCHAR(), nullable=True),
    sa.Column('feed_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['feed_id'], ['rss_feeds.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rss_articles_id'), 'rss_articles', ['id'], unique=False)
    op.create_table('collection_articles',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('collection_id', sa.INTEGER(), nullable=True),
    sa.Column('article_id', sa.INTEGER(), nullable=True),
    sa.Column('added_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['article_id'], ['rss_articles.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['collection_id'], ['collections.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_collection_articles_id'), 'collection_articles', ['id'], unique=False)
    # ### end Alembic commands ###
